/*! CAF: cag.mjs
	v14.0.0 (c) 2021 Kyle Simpson
	MIT License: http://getify.mit-license.org
*/
import CAF from"./caf.mjs";import{TIMEOUT_TOKEN,cancelToken,signalPromise,processTokenOrSignal,deferred,isFunction,isPromise}from"./shared.mjs";onceEvent=CAF(onceEvent);export default Object.assign(CAG,{onEvent:onEvent,onceEvent:onceEvent});export{onEvent};export{onceEvent};var awaiteds=new WeakSet;const unset=Symbol("unset"),returned=Symbol("returned"),canceled=Symbol("canceled");function CAG(e){return function instance(n,...r){var t,o;if(({tokenOrSignal:n,signal:t,signalPr:o}=processTokenOrSignal(n)),t.aborted)throw t.reason||"Aborted";var a=deferred(),{it:i,ait:l}=runner(e,a.pr,onComplete,t,...r),s=l.return;return l.return=function doReturn(e){try{return a.pr.resolved=!0,a.resolve(returned),Promise.resolve(i.return(e))}finally{s.call(l),onComplete()}},l;function onComplete(){n&&n!==t&&n[TIMEOUT_TOKEN]&&n.abort(),l&&(l.return=s,n=a=i=l=s=null)}}}function onEvent(e,n,r,t=!1){var o,a,i=!1,l=CAG((function*eventStream({pwait:e}){i||start();try{for(;;){if(0==o.length){let{pr:e,resolve:n}=deferred();o.push(e),a.push(n)}yield yield e(o.shift())}}finally{isFunction(n.removeEventListener)?n.removeEventListener(r,handler,t):isFunction(n.removeListener)?n.removeListener(r,handler):isFunction(n.off)&&n.off(r,handler),o.length=a.length=0}}))(e,n,r,t);return l.start=start,l;function start(){i||(i=!0,o=[],a=[],isFunction(n.addEventListener)?n.addEventListener(r,handler,t):isFunction(n.addListener)?n.addListener(r,handler):isFunction(n.on)&&n.on(r,handler))}function handler(e){if(a.length>0){a.shift()(e)}else{let{pr:n,resolve:r}=deferred();o.push(n),r(e)}}}function*onceEvent(e,n,r,t=!1){try{var o=onEvent(e,n,r,t);return(yield o.next()).value}finally{o.return()}}function pwait(e){var n=Promise.resolve(e);return awaiteds.add(n),n}function runner(e,n,r,t,...o){var a=e.call(this,{signal:t,pwait:pwait},...o);e=o=null;var i=t.pr.catch((e=>{throw{[canceled]:!0,reason:e}}));return i.catch((()=>{})),{it:a,ait:async function*runner(){var e,t=unset;try{for(;!n.resolved;)if(t!==unset?(e=t,t=unset,e=a.throw(e)):e=a.next(e),isPromise(e.value))if(awaiteds.has(e.value)){awaiteds.delete(e.value);try{if((e=await Promise.race([n,i,e.value]))===returned)return}catch(e){if(e[canceled]){let n=a.return();throw void 0!==n.value?n.value:e.reason}t=e}}else e=yield e.value;else{if(e.done)return e.value;e=yield e.value}}finally{a=n=null,r()}}()}}