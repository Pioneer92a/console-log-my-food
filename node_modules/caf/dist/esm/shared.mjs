/*! CAF: shared.mjs
	v14.0.0 (c) 2021 Kyle Simpson
	MIT License: http://getify.mit-license.org
*/
const CLEANUP_FN=Symbol("Cleanup Function"),TIMEOUT_TOKEN=Symbol("Timeout Token");class cancelToken{constructor(n=new AbortController){var i;this.controller=n,this.signal=n.signal;var handleReject=(n,e)=>{var doRej=()=>{if(e){var n=this.signal&&this.signal.reason?this.signal.reason:void 0;e(n),e=null}};this.signal.addEventListener("abort",doRej,!1),i=()=>{this.signal&&(this.signal.removeEventListener("abort",doRej,!1),this.signal.pr&&(this.signal.pr[CLEANUP_FN]=null)),doRej=null}};this.signal.pr=new Promise(handleReject),this.signal.pr[CLEANUP_FN]=i,this.signal.pr.catch(i),handleReject=i=null}abort(n){this.signal&&!("reason"in this.signal)&&(this.signal.reason=n),this.controller&&this.controller.abort()}discard(){this.signal&&(this.signal.pr&&(this.signal.pr[CLEANUP_FN]&&this.signal.pr[CLEANUP_FN](),this.signal.pr=null),this.signal=this.signal.reason=null),this.controller=null}}export default{CLEANUP_FN:CLEANUP_FN,TIMEOUT_TOKEN:TIMEOUT_TOKEN,cancelToken:cancelToken,signalPromise:signalPromise,processTokenOrSignal:processTokenOrSignal,deferred:deferred,isFunction:isFunction,isPromise:isPromise};export{CLEANUP_FN};export{TIMEOUT_TOKEN};export{cancelToken};export{signalPromise};export{processTokenOrSignal};export{deferred};export{isFunction};export{isPromise};function signalPromise(n){if(n.pr)return n.pr;var i,e=new Promise((function c(e,r){i=()=>r(),n.addEventListener("abort",i,!1)}));return e[CLEANUP_FN]=function cleanup(){n&&(n.removeEventListener("abort",i,!1),n=null),e&&(e=e[CLEANUP_FN]=i=null)},e.catch(e[CLEANUP_FN]),e}function processTokenOrSignal(n){n instanceof AbortController&&(n=new cancelToken(n));var i=n&&n instanceof cancelToken?n.signal:n;return{tokenOrSignal:n,signal:i,signalPr:signalPromise(i)}}function deferred(){var n;return{pr:new Promise((i=>n=i)),resolve:n}}function isFunction(n){return"function"==typeof n}function isPromise(n){return n&&"object"==typeof n&&"function"==typeof n.then}